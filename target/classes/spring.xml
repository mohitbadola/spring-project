<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- bean definitions here -->
    <!-- singleton is default scope -->
    <!--	<bean id="alien" class="com.jason.Alien" scope="singleton"> only 1 instance created and injected among all object -->
    <!--	<bean id="alien" class="com.jason.Alien" scope="prototype"> new bean instance is created each time -->

<!--    <bean id = "alien" class = "com.jason.Alien" autowire="byName">-->
    <bean id = "alien" class = "com.jason.Alien" autowire="byType">

        <!-- Setter Injection -->
        <property name = "age" value=" 21"/>
<!--        <property name="comp" ref="comp"/>-->

        <!-- Constructor Injection-->
<!--        type work when different types of variables -->
<!--        name, type should be defined in same order as constructor-->

<!--        <constructor-arg type="int" value="21"/>-->
<!--        <constructor-arg type="com.jason.Laptop" ref="lap1"/>-->

<!--        <constructor-arg name="age" value="21"/>-->
<!--        <constructor-arg name="lap" ref="lap1"/>-->

        <!--        index is best way as it is order free-->
<!--        <constructor-arg index="0" value="21"/>-->
<!--        <constructor-arg index="1" ref="lap1"/>-->

    </bean>
    <bean id="comp1" class="com.jason.Laptop" primary="true"/>
<!--  In singleton scope lazy-init create object when required  -->
<!--    but if non-lazy is dependent on lazy then it is created with it -->
    <bean id="comp2" class="com.jason.Desktop" lazy-init="true"/>

</beans>

